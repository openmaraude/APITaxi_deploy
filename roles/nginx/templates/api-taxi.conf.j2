#
# This file is installed by Ansible. ** DO NOT ** edit manually.
#

upstream api-taxi {
    server 127.0.0.1:8427;
}

server {
    listen 80;
    listen [::]:80;
    server_name {{ deploy.hostname }};
    return 301 https://$server_name$request_uri;
}

server {
    server_name {{ deploy.hostname }};
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    ssl_certificate /etc/letsencrypt/live/{{ deploy.hostname }}/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/{{ deploy.hostname }}/privkey.pem; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    # SSL Configuration generated with https://ssl-config.mozilla.org

    ## Some very old clients still use our API.
    #ssl_protocols TLSv1.2 TLSv1.3;
    #ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    #ssl_prefer_server_ciphers off;

    # HSTS (ngx_http_headers_module is required) (63072000 seconds)
    add_header Strict-Transport-Security "max-age=63072000" always;

    add_header X-Frame-Options SAMEORIGIN;
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options nosniff;

    gzip on;
    gzip_comp_level 6;
    gzip_disable "msie6";
    gzip_min_length 150;
    gzip_proxied any;
    gzip_types text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript application/json application/javascript;
    gzip_vary on;

    # Controlling buffer overflow attacks
    # http://www.cyberciti.biz/tips/linux-unix-bsd-nginx-webserver-security.html
    client_body_buffer_size  8k;
    client_header_buffer_size 1k;
    client_max_body_size 20m;
    large_client_header_buffers 4 8k;

    client_body_timeout   120;
    client_header_timeout 12;
    keepalive_timeout     15 15;
    send_timeout          10;

    access_log  /var/log/nginx/api-taxi.access.log;
    error_log /var/log/nginx/api-taxi.error.log;

    location = / {
        return 302 https://console.{{ deploy.hostname }};
    }

    location / {
        include /etc/nginx/uwsgi_params;
        uwsgi_pass api-taxi;
    }

    location /doc/ {
        expires modified +1w;
        proxy_pass http://127.0.0.1:8881/;
    }

    location /mymap/ {
        proxy_pass http://127.0.0.1:9999/;
    }

    location /flower {
        rewrite ^/flower/(.*)$ /$1 break;
        proxy_set_header Host $host;
        auth_basic "Protected";
        auth_basic_user_file /etc/nginx/admin.passwd;
        proxy_pass http://127.0.0.1:5555;
    }
}
